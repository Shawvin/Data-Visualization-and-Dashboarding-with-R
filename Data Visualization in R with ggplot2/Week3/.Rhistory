setwd("C:/Users/Wang Xiaoyuan/Desktop/Data Visulization and Dashboarding with R/Data Visualization in R with ggplot2/Week2")
# Dummy data
x <- LETTERS[1:20]
y <- paste0("var", seq(1,20))
data <- expand.grid(X=x, Y=y)
data$Z <- runif(400, 0, 5)
data
?expand.grid
head(dat)
head(data)
ggplot(data, aes(x=X,y=Y,fill=Z)) +
geom_tile()
library(tidyverse)
ggplot(data, aes(x=X,y=Y,fill=Z)) +
geom_tile()
# practice again using a more substantive example
players<-c("Michael","Lebron","Kobe")
points<-c(35,40,45)
assists<-c(10,12,5)
rebounds<-c(15,12,5)
basketball<-data.frame(players,points,assists,rebounds)
basketball
basketball$standardize_points<-basketball$points/max(basketball$points)
basketball$standardize_assists<-basketball$assists/max(basketball$assists)
basketball$standardize_rebounds<-basketball$rebounds/max(basketball$rebounds)
basketball_standardize<-select(basketball, players, standardize_points, standardize_assists, standardize_rebounds)
?gather
long_basketball_scale<-gather(basketball_standardize, "stat","value",-players)
?pivot_longer
?gather
ggplot(long_basketball_scale, aes(x=players, y=stat,fill=value)) +
geom_tile()
######DO NOT MODIFY. This will load required packages and data.
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
cces <- drop_na(read_csv(url("https://www.dropbox.com/s/ahmt12y39unicd2/cces_sample_coursera.csv?raw=1")))
######DO NOT MODIFY. This will load required packages and data.
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
cces <- drop_na(read_csv(url("https://www.dropbox.com/s/ahmt12y39unicd2/cces_sample_coursera.csv?raw=1")))
cces
ggplot(cces,aes(x=Ideology, fill=Ideology)) +
geom_bar()
cces$Ideology<-recode(cces,'1'="Very Liberal",'2'="Liberal",'3'="Moderate",
'4'="Conservative",'5'="Very Conservative")
cces$Ideology<-recode(cces$ideo5,'1'="Very Liberal",'2'="Liberal",'3'="Moderate",
'4'="Conservative",'5'="Very Conservative")
ggplot(cces,aes(x=Ideology, fill=Ideology)) +
geom_bar()
ggplot(cces,aes(x=Ideology, fill=Ideology)) +
geom_bar() +
labs(title="Respondent Ideology") +
guides(fill=FALSE)
cces$Religion<-recode(cces$pew_religimp,'1'="Very Imp.",'2'="Somwhat imp.",'3'="Not too imp.",
'4'="Not imp.")
ggplot(cces,aes(x=Religion, fill=Ideology)) +
geom_bar()
ggplot(cces,aes(x=Religion, fill=Ideology)) +
geom_bar() +
labs(x="importance of Religion", title="Importance of Religion by Ideology")
Semester<-rep(1:6,3)
Student<-rep(c("Amanda","Betty","Carol"), each=6)
Grade=runif(80,100, 18)
Result<-tibble(Semester, Student, Grade)
Grade
?runif
Grade=runif(18, 80,100)
Grade
Result<-tibble(Semester, Student, Grade)
Result
ggplot(Result, aes(x=Semester, y=Grade, color=Student)) +
geom_line() +
facet_wrap(~Student)
set.seed(100)
Grade=runif(18, 80,100)
Result<-tibble(Semester, Student, Grade)
ggplot(Result, aes(x=Semester, y=Grade, color=Student)) +
geom_line() +
facet_wrap(~Student)
ggplot(Result, aes(x=Semester, y=Grade, color=Student)) +
geom_line() +
facet_wrap(~Student) +
guides(fill=FALSE)
ggplot(Result, aes(x=Semester, y=Grade, color=Student)) +
geom_line() +
guides(fill=FALSE) +
facet_wrap(~Student)
ggplot(Result, aes(x=Semester, y=Grade, color=Student)) +
geom_line(size=2) +
guides(fill=FALSE) +
facet_wrap(~Student)
ggplot(Result, aes(x=Semester, y=Grade, color=Student)) +
geom_line(size=1) +
guides(fill=FALSE) +
facet_wrap(~Student)
ggplot(Result, aes(x=Semester, y=Grade, color=Student)) +
geom_line(size=1) +
guides(color=FALSE) +
facet_wrap(~Student)
Semester<-rep(1:6,3)
Student<-rep(c("Amanda","Betty","Carol"), each=6)
set.seed(100)
Grade=runif(18, 80,100)
Result<-tibble(Semester, Student, Grade)
ggplot(Result, aes(x=Semester, y=Grade, color=Student)) +
geom_line(size=1) +
labs(title="Student Grades by Semester") +
guides(color=FALSE) +
facet_wrap(~Student)
setwd("C:/Users/Wang Xiaoyuan/Desktop/Data Visulization and Dashboarding with R/Data Visualization in R with ggplot2/Week3")
library(tidyverse)
kid<-c("Nick","Jessica","Justin","Brandi","Kelly","Enrique")
time_spent<-c(40,35,25,20,10,5)
high_score<-c(100,75,85,50,25,30)
tetris<-tibble(kid,time_spent,high_score)
ggplot(tetris,aes(x=time_spent,y=high_score)) +
geom_point()
ggplot(tetris,aes(x=time_spent,y=high_score)) +
geom_point() +
geom_text(aes(label=kid))
ggplot(tetris,aes(x=time_spent,y=high_score)) +
# geom_point() +
geom_text(aes(label=kid))
?geom_text
# push the text away from the point
ggplot(tetris,aes(x=time_spent,y=high_score)) +
geom_point() +
geom_text(aes(label=kid),nudge_y = 0.5)
# push the text away from the point
ggplot(tetris,aes(x=time_spent,y=high_score)) +
geom_point() +
geom_text(aes(label=kid),nudge_y = 2)
# push the text away from the point
ggplot(tetris,aes(x=time_spent,y=high_score)) +
geom_point() +
geom_text(aes(label=kid),nudge_y = 5)
# push the text away from the point
ggplot(tetris,aes(x=time_spent,y=high_score)) +
geom_point() +
geom_text(aes(label=kid,color=kid),nudge_y = 5)
# push the text away from the point
ggplot(tetris,aes(x=time_spent,y=high_score)) +
geom_point() +
geom_text(aes(label=kid,color=kid),nudge_y = 5) +
guide(color=FALSE)
# push the text away from the point
ggplot(tetris,aes(x=time_spent,y=high_score)) +
geom_point() +
geom_text(aes(label=kid,color=kid),nudge_y = 5) +
guides(color=FALSE)
cel<-read.csv("cel_volden_wiseman-_coursera.csv")
cel %>% filter(congress==115) %>%
ggplot(aes(x=dwnom1,y=all_pass)) +
geom_point()
cel<-read.csv("cel_volden_wiseman-_coursera.csv")
cel %>% filter(congress==115) %>%
ggplot(aes(x=dwnom1,y=all_pass)) +
geom_point()
cel %>% filter(congress==115) %>%
ggplot(aes(x=dwnom1,y=all_pass, label=thomas_name)) +
geom_point()
cel %>% filter(congress==115) %>%
ggplot(aes(x=dwnom1,y=all_pass, label=thomas_name)) +
geom_point() +
geom_text()
cel %>% filter(congress==115) %>%
ggplot(aes(x=dwnom1,y=all_pass, label=thomas_name)) +
geom_point() +
# specify here that you only want the geom_text to apply to a subset of the data
geom_text(data=filter(cel,congress==115 & all_pass>8))
install.packages("ggrepel")
## install.packages("ggrepel")
library(ggrepel)
cel %>% filter(congress==115) %>%
ggplot(aes(x=dwnom1,y=all_pass, label=thomas_name)) +
geom_point() +
# specify here that you only want the geom_text to apply to a subset of the data
geom_text_repel(data=filter(cel,congress==115 & all_pass>8), mapping=aes(x=dwnom1, y=all_pass, label=thomas_name))
cel %>% filter(congress==115) %>%
ggplot(aes(x=dwnom1,y=all_pass)) +
geom_point() +
# specify here that you only want the geom_text to apply to a subset of the data
geom_text_repel(data=filter(cel,congress==115 & all_pass>8), mapping=aes(x=dwnom1, y=all_pass, label=thomas_name))
cel
is.na(cel$dwnom1)
which(is.na(cel$dwnom1))
cel %>% filter(congress==115) %>%
ggplot(aes(x=dwnom1,y=all_pass)) +
geom_point() +
# specify here that you only want the geom_text to apply to a subset of the data
geom_text_repel(data=filter(cel,congress==115 & all_pass>8), mapping=aes(x=dwnom1, y=all_pass, label=thomas_name)) +
annotate("rect",xmin=.05,xmax = .4,ymin=13,ymax=15,alpha=.2, fill="red")+
annotate("text",x=.6,y=14,label="Most passed", color="red")
cces<-read.csv("cces_sample_coursera.csv")
# make a small data set with variables
plot_data<-select(cces, "CC18_308a","ideo5","educ","faminc_new","employ") %>% drop_na()
ggplot(plot_data, aes(y=CC18_308a,x=ideo5)) +
geom_jitter()
ggplot(plot_data, aes(y=CC18_308a,x=ideo5, color=educ, size=faminc_new)) +
geom_jitter()
ggplot(plot_data, aes(y=CC18_308a,x=ideo5, color=educ, size=faminc_new)) +
geom_jitter() +
# use scale_color_gradient here to show continuous change in a numeric variable
scale_color_gradient(low="gray",high="purple")
ggplot(plot_data, aes(y=CC18_308a,x=ideo5, color=employ_cat)) +
geom_jitter() +
scale_color_brewer(palette = "RdYlGn")
plot_data$employ_cat<-recode(plot_data$employ, '1'="Full-time",'2'="part-time",
'3'="Temp. Layoff", '4'="Unemployed", '5'="Retired",
'6'="Disabled",'7'="Homemaker", '8'="Student", '9'="Other")
ggplot(plot_data, aes(y=CC18_308a,x=ideo5, color=employ_cat)) +
geom_jitter() +
scale_color_brewer(palette = "RdYlGn")
# rename the employ_cat column
plot_data<-rename(plot_data,'Employment'=employ_cat)
ggplot(plot_data, aes(y=CC18_308a,x=ideo5, color=employ_cat)) +
geom_jitter() +
scale_color_brewer(palette = "RdYlGn")
# rename the employ_cat column
plot_data<-rename(plot_data,'Employment'='employ_cat')
# rename the employ_cat column
plot_data<-rename(plot_data,'Employment'=employ_cat)
ggplot(plot_data, aes(y=CC18_308a,x=ideo5, color=Employment)) +
geom_jitter() +
scale_color_brewer(name="Employment", palette = "RdYlGn")
ggplot(plot_data, aes(y=CC18_308a,x=ideo5, color=Employment)) +
geom_jitter() +
scale_color_brewer(name="Employment", palette = "RdYlGn") +
theme(legend.position = "bottom",
axis.text.x = element_text(angle=90,hjust=1,color = "blue"))
ggplot(plot_data, aes(y=CC18_308a,x=ideo5, color=Employment)) +
geom_jitter() +
scale_color_brewer(name="Employment", palette = "RdYlGn") +
theme(legend.position = "bottom",
axis.text.x = element_text(angle=90,hjust=1,color = "blue"),
axis.title = element_text(color="red"))+
labs(x="Ideology", y="Trump Approval",
title="Trump Approval, Ideology, and Employment",
caption = "A caption might have a quick note about the figure or a sourcing.")
ggplot(plot_data, aes(y=CC18_308a,x=ideo5, color=Employment)) +
geom_jitter() +
scale_color_brewer(name="Employment", palette = "RdYlGn") +
theme(legend.position = "bottom",
axis.text.x = element_text(angle=90,hjust=1,color = "blue"),
axis.title = element_text(color="red"),
legend.title = element_text(color="green"))+
labs(x="Ideology", y="Trump Approval",
title="Trump Approval, Ideology, and Employment",
caption = "A caption might have a quick note about the figure or a sourcing.")
## ggthemes contains pre-baked themes that you can try and modify
ggplot(plot_data, aes(y=CC18_308a,x=ideo5, color=Employment)) +
geom_jitter() +
theme_wsj()
ggplot(plot_data, aes(y=CC18_308a,x=ideo5, color=Employment)) +
geom_jitter() +
scale_color_brewer(name="Employment", palette = "RdYlGn") +
theme(legend.position = "bottom",
axis.text.x = element_text(angle=90,hjust=1,color = "blue"),
axis.title = element_text(color="red"),
legend.title = element_text(color="green"))+
labs(x="Ideology", y="Trump Approval",
title="Trump Approval, Ideology, and Employment",
caption = "A caption might have a quick note about the figure or a sourcing.")
library(ggthemes)
## ggthemes contains pre-baked themes that you can try and modify
ggplot(plot_data, aes(y=CC18_308a,x=ideo5, color=Employment)) +
geom_jitter() +
theme_wsj()
# you can still control elements of a pre-baked ggtheme
ggplot(plot_data, aes(y=CC18_308a,x=ideo5, color=Employment)) +
geom_jitter() +
theme_wsj() +
theme(axis.text=element_text(angle = 90))
time_series<-expand.grid(units=units, time=time)
time_series<-expand.grid(units=units, time=time)
## line chart
units<-letters[1:2]
time<-seq(1:10)
time_series<-expand.grid(units=units, time=time)
time_series$variable<-runif(20,0,5)
line_plot<-ggplot(time_series, aes(x=time, y=vvariable, group=units))+geom_line()
line_plot
line_plot<-ggplot(time_series, aes(x=time, y=variable, group=units))+geom_line()
line_plot
x_axis=seq(1:10)
y_axis=runit(10,0,5)
scatter_dat<-data.frame(x=x_axis,y=y_axis)
scatter_plot<-ggplot(scatter_dat,aes(x=x_axis,y=y_axis))+geom_point()
scatter_plot
y_axis=runif(10,0,5)
scatter_dat<-data.frame(x=x_axis,y=y_axis)
scatter_plot<-ggplot(scatter_dat,aes(x=x_axis,y=y_axis))+geom_point()
scatter_plot
cases<-letters[1:5]
y_axis1<-runif(5,0,5)
y_axis2<-runif(5,0,5)
y_axis3<-runif(5,0,5)
bar_dat<-data.frame(cases=cases, y1=y_axis1,y2=y_axis2,y3=y_axis3)
long_bar_dat<-pivot_longer(bar_dat, c("y1","y2","y3"), names_to = "measure",
values_to = "value")
bar_plot<-ggplot(long_bar_dat, aes(x=cases,y=value, fill=measure)) +geom_bar(stat=
"identity", position="dodge")
bar_plot
install.packages("svglite")
ry
# save files as .svg from ggsave
library("svglite")
install.packages("svglite")
# save files as .svg from ggsave
library(svglite)
