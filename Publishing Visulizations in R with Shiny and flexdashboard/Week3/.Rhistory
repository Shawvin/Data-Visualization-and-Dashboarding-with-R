setwd("C:/Users/Wang Xiaoyuan/Desktop/Data Visulization and Dashboarding with R/Publishing Visulizations in R with Shiny and flexdashboard/Week3")
install.packages("flexdashboard")
install.packages("flexdashboard")
library(flexdashboard)
library(tidyverse)
library(plotly)
library(shiny)
dat<-read_csv(url("https://www.dropbox.com/s/4ebgnkdhhxo5rac/cel_volden_wiseman%20_coursera.csv?raw=1"))
dat$Party<-recode(dat$dem,`1`="Democrat",`0`="Republican")
#######HINT: for Chart D, you'll need to set the height of the renderPlot, using the height argument. Try a value of 750.
#####some data management functions are already included. You need to add the visualization functions.
dat %>%
drop_na() %>%
filter(year>1979) %>%
group_by(year,Party) %>%
summarise(passed=sum(all_pass)) %>%
ggplot(aes(x=year,y=passed, fill=Party)) +
geom_area()
dat %>%
drop_na() %>%
filter(year>1979) %>%
group_by(year,Party) %>%
summarise(passed=sum(all_pass)) %>%
ggplot(aes(x=year,y=passed, fill=Party)) +
geom_area() +
scale_fill_discrete(values=C("blue","red"))
dat %>%
drop_na() %>%
filter(year>1979) %>%
group_by(year,Party) %>%
summarise(passed=sum(all_pass)) %>%
ggplot(aes(x=year,y=passed, fill=Party)) +
geom_area() +
scale_fill_discrete(values=c("blue","red"))
dat %>%
drop_na() %>%
filter(year>1979) %>%
group_by(year,Party) %>%
summarise(passed=sum(all_pass)) %>%
ggplot(aes(x=year,y=passed, fill=Party)) +
geom_area() +
scale_fill_manual(values=c("blue","red"))
dat %>%
drop_na() %>%
filter(year>1979) %>%
group_by(year,Party) %>%
summarise(passed=sum(all_pass)) %>%
ggplot(aes(x=year,y=passed, fill=Party)) +
geom_area() +
scale_fill_manual(values=c("blue","red")) +
labs(x="Year", y="All bills Passed", title = "Number of Bills Passed Since 1980")
ggplotly(
dat%>%
drop_na()%>%
filter(congress==110) %>%
ggplot(aes(x=votepct,y=all_pass, color=Party)) +
geom_point()
)
ggplotly(
dat%>%
drop_na()%>%
filter(congress==110) %>%
ggplot(aes(x=votepct,y=all_pass, color=Party)) +
geom_point() =
scale_color_manual(values=c("blue","red"))
)
ggplotly(
dat%>%
drop_na()%>%
filter(congress==110) %>%
ggplot(aes(x=votepct,y=all_pass, color=Party)) +
geom_point() +
scale_color_manual(values=c("blue","red"))
)
ggplotly(
dat%>%
drop_na()%>%
filter(congress==110) %>%
ggplot(aes(x=votepct,y=all_pass)) +
geom_point() +
geom_smooth(aes(color=Party))
scale_color_manual(values=c("blue","red"))
)
ggplotly(
dat%>%
drop_na()%>%
filter(congress==110) %>%
ggplot(aes(x=votepct,y=all_pass)) +
geom_point() +
geom_smooth(aes(color=Party)) +
scale_color_manual(values=c("blue","red"))
)
ggplotly(
dat%>%
drop_na()%>%
filter(congress==110) %>%
ggplot(aes(x=votepct,y=all_pass, color=Party)) +
geom_point() +
geom_smooth(aes(color=Party)) +
scale_color_manual(values=c("blue","red"))
)
ggplotly(
dat%>%
drop_na()%>%
filter(congress==110) %>%
ggplot(aes(x=votepct,y=all_pass, group=Party)) +
geom_point() +
geom_smooth(aes(color=Party)) +
scale_color_manual(values=c("blue","red"))
)
ggplotly(
dat%>%
drop_na()%>%
filter(congress==110) %>%
ggplot(aes(x=votepct,y=all_pass)) +
geom_point(aes(color=Party)) +
geom_smooth(aes(color=Party)) +
scale_color_manual(values=c("blue","red"))
)
ggplotly(
dat%>%
drop_na()%>%
filter(congress==110) %>%
ggplot(aes(x=votepct,y=all_pass)) +
geom_smooth(aes(color=Party)) +
geom_point(aes(color=Party)) +
scale_color_manual(values=c("blue","red"))
)
ggplotly(
dat%>%
drop_na()%>%
filter(congress==110) %>%
ggplot(aes(x=votepct,y=all_pass, color=Party)) +
geom_smooth(aes(color=Party)) +
geom_point(aes(color=Party)) +
scale_color_manual(values=c("blue","red"))
)
ggplotly(
dat%>%
drop_na()%>%
filter(congress==110) %>%
ggplot(aes(x=votepct,y=all_pass, color=Party)) +
geom_smooth(aes(color=Party)) +
geom_point() +
scale_color_manual(values=c("blue","red"))
)
ggplotly(
dat%>%
drop_na()%>%
filter(congress==110) %>%
ggplot(aes(x=votepct,y=all_pass, color=Party)) +
geom_smooth(aes(color=Party)) +
geom_point() +
scale_color_manual(values=c("blue","red")) =
labs(x="Vote Pct",
y="All Pass",
title = "Passage and Vote Pct., 110th Congress")
)
ggplotly(
dat%>%
drop_na()%>%
filter(congress==110) %>%
ggplot(aes(x=votepct,y=all_pass, color=Party)) +
geom_smooth(aes(color=Party)) +
geom_point() +
scale_color_manual(values=c("blue","red")) =
labs(x="Vote Pct",
y="All Pass",
title = "Passage and Vote Pct., 110th Congress")
)
ggplotly(
dat%>%
drop_na()%>%
filter(congress==110) %>%
ggplot(aes(x=votepct,y=all_pass, color=Party)) +
geom_smooth(aes(color=Party)) +
geom_point() +
scale_color_manual(values=c("blue","red")) +
labs(x="Vote Pct",
y="All Pass",
title = "Passage and Vote Pct., 110th Congress")
)
ggplotly(
dat%>%
drop_na()%>%
filter(congress==110) %>%
ggplot(aes(x=votepct,y=all_pass, color=Party)) +
geom_smooth(aes(color=Party)) +
geom_point() +
scale_color_manual(values=c("blue","red")) +
labs(x="Vote Pct",
y="All Pass",
title = "Passage and Vote Pct., 110th Congress")
)
ggplotly(
dat%>%
drop_na()%>%
filter(congress==110) %>%
ggplot(aes(x=votepct,y=all_pass, color=Party)) +
geom_smooth(method = 'loess',aes(color=Party)) +
geom_point() +
scale_color_manual(values=c("blue","red")) +
labs(x="Vote Pct",
y="All Pass",
title = "Passage and Vote Pct., 110th Congress")
)
ggplotly(
dat%>%
drop_na()%>%
filter(congress==110) %>%
ggplot(aes(x=dwnom1,y=all_pass, color=Party)) +
geom_smooth(method = 'lm',aes(color=Party)) +
geom_point() +
scale_color_manual(values=c("blue","red")) +
labs(x="DW Nominate.",
y="All Pass",
title = "Passage and Ideology, 110th Congress")
)
dat$st_name
unique(dat$st_name)
multiInput(inputId="state",label="state",choices=unique(dat$st_name), selected =unique(dat$st_name) )
SelectInput(inputId="state",label="state",choices=unique(dat$st_name), selected =unique(dat$st_name) )
library(flexdashboard)
library(tidyverse)
library(plotly)
library(shiny)
dat<-read_csv(url("https://www.dropbox.com/s/4ebgnkdhhxo5rac/cel_volden_wiseman%20_coursera.csv?raw=1"))
dat$Party<-recode(dat$dem,`1`="Democrat",`0`="Republican")
#######HINT: for Chart D, you'll need to set the height of the renderPlot, using the height argument. Try a value of 750.
#####some data management functions are already included. You need to add the visualization functions.
SelectInput(inputId="state",label="state",choices=unique(dat$st_name), selected =unique(dat$st_name) )
radioButtons(inputId="my_cyl",label="Cylinders",choices=c(4,6,8))
radioButtons(inputId="my_cyl",label="Cylinders",choices=c(4,6,8))
SelectInput(inputId="state",label="state",
choices=unique(dat$st_name),
selected =unique(dat$st_name),
multiple=TRUE)
selectInput(inputId="state",label="state",
choices=unique(dat$st_name),
selected =unique(dat$st_name),
multiple=TRUE)
####hint: this figure uses selectInput with the multiple option set to true and with the options set up so that all states are initially selected.
renderPlot(
dat %>%
group_by(st_name) %>%
filter(congress==110) %>%
summarise(passed=sum(all_pass)) %>%
ggplot(aes(x=st_name,y=passed)) +
geom_bar(stat = "identity") +
coord_flip()
)
dat %>%
group_by(st_name) %>%
filter(congress==110) %>%
summarise(passed=sum(all_pass)) %>%
ggplot(aes(x=st_name,y=passed)) +
geom_bar(stat = "identity") +
coord_flip()
####hint: this figure uses selectInput with the multiple option set to true and with the options set up so that all states are initially selected.
renderPlot(
dat %>%
group_by(st_name) %>%
filter(congress==110 & st_name %in% input$state) %>%
summarise(passed=sum(all_pass)) %>%
ggplot(aes(x=st_name,y=passed)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(x="State Name", y="Total Bills Passed Per State")
)
unique(dat$st_name)
len(unique(dat$st_name))
length(unique(dat$st_name))
dat %>%
group_by(st_name) %>%
filter(congress==110 & st_name %in% input$state) %>%
summarise(passed=sum(all_pass))
library(flexdashboard)
library(tidyverse)
library(plotly)
library(shiny)
dat<-read_csv(url("https://www.dropbox.com/s/4ebgnkdhhxo5rac/cel_volden_wiseman%20_coursera.csv?raw=1"))
dat$Party<-recode(dat$dem,`1`="Democrat",`0`="Republican")
states<-unique(dat$st_name)
#######HINT: for Chart D, you'll need to set the height of the renderPlot, using the height argument. Try a value of 750.
#####some data management functions are already included. You need to add the visualization functions.
states
unique(dat$st_name)
```{r}
selectInput(inputId="state",label="state",
choices=c("SD","NY","WA","AR","CA","IL","NC","ND","TX","CO","OH","WI","FL","TN","PA","MD","PR","MN","AL","GA","LA","MA","MO","MS","IN","KY",
"MI","VA","OK","NH","ME","AZ","CT","IA","NJ","SC","OR","DC","ID","WV","NM","VT","NE","HI","UT","MT","WY","KS","RI","NV","GU","AK",
"VI","DE","AS","MP"),
selected =c("SD","NY","WA","AR","CA","IL","NC","ND","TX","CO","OH","WI","FL","TN","PA","MD","PR","MN","AL","GA","LA","MA","MO","MS","IN",
"KY","MI","VA","OK","NH","ME","AZ","CT","IA","NJ","SC","OR","DC","ID","WV","NM","VT","NE","HI","UT","MT","WY","KS","RI","NV",
"GU","AK","VI","DE","AS","MP"),
multiple=TRUE)
```
Column
----------------------------------------------------------------
```{r}
dat$st_name %in% c("SD","NY","WA","AR","CA","IL","NC","ND","TX","CO","OH","WI","FL","TN","PA","MD","PR","MN","AL","GA","LA","MA","MO","MS","IN","KY",
"MI","VA","OK","NH","ME","AZ","CT","IA","NJ","SC","OR","DC","ID","WV","NM","VT","NE","HI","UT","MT","WY","KS","RI","NV","GU","AK",
"VI","DE","AS","MP")
library(flexdashboard)
library(tidyverse)
library(plotly)
library(shiny)
dat<-read_csv(url("https://www.dropbox.com/s/4ebgnkdhhxo5rac/cel_volden_wiseman%20_coursera.csv?raw=1"))
dat$Party<-recode(dat$dem,`1`="Democrat",`0`="Republican")
#######HINT: for Chart D, you'll need to set the height of the renderPlot, using the height argument. Try a value of 750.
#####some data management functions are already included. You need to add the visualization functions.
str(dat)
summary(dat)
tibble(dat)
str(tibble(dat))
####hint: this figure uses selectInput with the multiple option set to true and with the options set up so that all states are initially selected.
renderPlot(
dat %>%
filter(st_name %in% input$state) %>%
group_by(st_name) %>%
filter(congress==110) %>%
summarise(passed=sum(all_pass)) %>%
ggplot(aes(x=st_name,y=passed)) +
geom_bar(stat = "identity") +
coord_flip() +
labs(x="State Name", y="Total Bills Passed Per State",
title = "Total Bills Passed by State Delegation, 110th Congress")
)
dat<-read_csv(url("https://www.dropbox.com/s/4ebgnkdhhxo5rac/cel_volden_wiseman%20_coursera.csv?raw=1"))
head(dat)
dat$dem
str(dat)
dat<-read.csv("cel_volden_wiseman-_coursera.csv")
str(dat)
