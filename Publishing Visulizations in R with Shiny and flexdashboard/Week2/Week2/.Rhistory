setwd("C:/Users/Wang Xiaoyuan/Desktop/Data Visulization and Dashboarding with R/Publishing Visulizations in R with Shiny and flexdashboard/Week2")
library(shiny); runApp('inputs-and-outputs.R')
runApp('rows_columns.R')
runApp('tabs.R')
runApp('navlists.R')
runApp('pages.R')
runApp('rows_columns.R')
ui <- fluidPage(
titlePanel("Sampling the Normal Distribution"),
fluidRow(
plotOutput("distPlot"),
column(4,
bottomPanel(
sliderInput("obs", "Number of observations:",
min = 1, max = 1000, value = 500)))
)
)
library(tidyverse)
shinyApp(ui,server)
shinyApp(ui,server)
ui <- fluidPage(
titlePanel("Sampling the Normal Distribution"),
fluidRow(
plotOutput("distPlot"),
column(4,
footerPanel(
sliderInput("obs", "Number of observations:",
min = 1, max = 1000, value = 500)))
)
)
ui <- fluidPage(
titlePanel("Sampling the Normal Distribution"),
fluidRow(
plotOutput("distPlot"),
column(4,
wellPanel(
sliderInput("obs", "Number of observations:",
min = 1, max = 1000, value = 500)))
)
)
ui <- fluidPage(
titlePanel("Sampling the Normal Distribution"),
fluidRow(
plotOutput("distPlot"),
column(4,
wellPanel(
sliderInput("obs", "Number of observations:",
min = 1, max = 1000, value = 500)))
)
)
library(shiny)
library(tidyverse)
dat<-rnorm(1000,0,1)
ui <- fluidPage(
titlePanel("Sampling the Normal Distribution"),
fluidRow(
plotOutput("distPlot"),
column(4,
wellPanel(
sliderInput("obs", "Number of observations:",
min = 1, max = 1000, value = 500)))
)
)
server <- function(input,output){
output$distPlot<-renderPlot(hist(sample(dat,input$obs)))
}
shinyApp(ui,server)
runApp('question.R')
runApp('question.R')
runApp('question.R')
runApp('question.R')
runApp('question.R')
runApp('pages.R')
runApp('tabs.R')
runApp('tabs.R')
runApp('Week2')
runApp('Week2')
runApp('Week2')
runApp('inputs-and-outputs.R')
runApp('Week2')
runApp('Week2')
library(plotly)
dat %>% filter(gender %in% NULL) %>% ggplot(aes(x=educ,y=pid7)) +
geom_point() +
geom_smooth(method="lm")
dat %>% filter(gender %in% 0) %>% ggplot(aes(x=educ,y=pid7)) +
geom_point() +
geom_smooth(method="lm")
dat %>% filter(gender %in% c(1)) %>% ggplot(aes(x=educ,y=pid7)) +
geom_point() +
geom_smooth(method="lm")
dat$gender
dat<-read_csv(url("https://www.dropbox.com/s/uhfstf6g36ghxwp/cces_sample_coursera.csv?raw=1"))
dat<- dat %>% select(c("pid7","ideo5","newsint","gender","educ","CC18_308a","region"))
dat<-drop_na(dat)
dat$gender
dat$gender %in% 1
dat$gender %in% NULL
dat %>% filter(gender %in% NULL) %>% ggplot(aes(x=educ,y=pid7)) +
geom_point() +
geom_smooth(method="lm")
runApp('Week2')
ui <- navbarPage(
title="My Application",
tabPanel("Page 1",
sidebarLayout(
sidebarPanel(
sliderInput(
inputId="ideo",
label="Select Five Point Ideology (1=Very liberal, 5=Very conservative)",
min=1,
max=5,
value=3,
sep="")
),
mainPanel(
tabsetPanel(
tabPanel("Tab 1", plotOutput("plot1")),
tabPanel("Tab 2", plotOutput("plot2"))
)
)
)
),
tabPanel("Page 2",
sidebarLayout(
sidebarPanel(
checkboxGroupInput(inputId="gender",
label="Select Gender",
choices=c(1,2)
),
),
mainPanel(
plotlyOutput("plot3")
)
)
),
tabPanel("Page 3")
)
ui <- navbarPage(
title="My Application",
tabPanel("Page 1",
sidebarLayout(
sidebarPanel(
sliderInput(
inputId="ideo",
label="Select Five Point Ideology (1=Very liberal, 5=Very conservative)",
min=1,
max=5,
value=3,
sep="")
),
mainPanel(
tabsetPanel(
tabPanel("Tab 1", plotOutput("plot1")),
tabPanel("Tab 2", plotOutput("plot2"))
)
)
)
),
tabPanel("Page 2",
sidebarLayout(
sidebarPanel(
checkboxGroupInput(inputId="gender",
label="Select Gender",
choices=c(1,2)
),
),
mainPanel(
plotlyOutput("plot3")
)
)
),
tabPanel("Page 3")
)
ui <- navbarPage(
title="My Application",
tabPanel("Page 1",
sidebarLayout(
sidebarPanel(
sliderInput(
inputId="ideo",
label="Select Five Point Ideology (1=Very liberal, 5=Very conservative)",
min=1,
max=5,
value=3,
sep="")
),
mainPanel(
tabsetPanel(
tabPanel("Tab 1", plotOutput("plot1")),
tabPanel("Tab 2", plotOutput("plot2"))
)
)
)
),
tabPanel("Page 2",
sidebarLayout(
sidebarPanel(
checkboxGroupInput(inputId="gender",
label="Select Gender",
choices=c(1,2)
),
),
mainPanel(
plotlyOutput("plot3")
)
)
),
tabPanel("Page 3")
)
runApp('Week2')
ui <- navbarPage(
title="My Application",
tabPanel("Page 1",
sidebarLayout(
sidebarPanel(
sliderInput(
inputId="ideo",
label="Select Five Point Ideology (1=Very liberal, 5=Very conservative)",
min=1,
max=5,
value=3,
sep="")
),
mainPanel(
tabsetPanel(
tabPanel("Tab 1", plotOutput("plot1")),
tabPanel("Tab 2", plotOutput("plot2"))
)
)
)
),
tabPanel("Page 2",
sidebarLayout(
sidebarPanel(
checkboxGroupInput(inputId="gender",
label="Select Gender",
choices=c(1,2),
selected = NULL
),
),
mainPanel(
plotlyOutput("plot3")
)
)
),
tabPanel("Page 3")
)
runApp('Week2')
ui <- navbarPage(
title="My Application",
tabPanel("Page 1",
sidebarLayout(
sidebarPanel(
sliderInput(
inputId="ideo",
label="Select Five Point Ideology (1=Very liberal, 5=Very conservative)",
min=1,
max=5,
value=3,
sep="")
),
mainPanel(
tabsetPanel(
tabPanel("Tab 1", plotOutput("plot1")),
tabPanel("Tab 2", plotOutput("plot2"))
)
)
)
),
tabPanel("Page 2",
sidebarLayout(
sidebarPanel(
checkboxGroupInput(inputId="gender",
label="Select Gender",
choices=c(1,2),
selected = c(1,2)
),
),
mainPanel(
plotlyOutput("plot3")
)
)
),
tabPanel("Page 3")
)
runApp('Week2')
runApp('Week2')
runApp('Week2')
runApp('Week2')
runApp('Week2')
dat %>% filter(gender %in% c(1,2)) %>% ggplot(aes(x=educ,y=pid7)) +
geom_point() +
geom_smooth(method="lm")
dat %>% filter(gender %in% c(1,2)) %>% ggplot(aes(x=educ,y=pid7)) +
geom_jitter() +
geom_smooth(method="lm")
runApp('Week2')
runApp('Week2')
runApp('Week2')
runApp('Week2')
runApp('inputs-and-outputs.R')
runApp('rows_columns.R')
runApp('navlists.R')
runApp('tabs.R')
runApp('Week2')
runApp('Week2')
runApp('Week2')
