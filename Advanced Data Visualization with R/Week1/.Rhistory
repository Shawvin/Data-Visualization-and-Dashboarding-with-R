var3<- var1*(-rnorm(50,1,.2))
dat2<-tibble(var1,var2,var3)
dat2 %>% ggpairs()
library(GGally)
dat2 %>% ggpairs()
library(GGally)
my_scatter<-function(data,mapping){
ggplot(data=data,mapping=mapping)+
geom_jitter(color="red")
}
my_density<-function(data,mapping){
ggplot(data=data,mapping=mapping)+
geom_density(alpha=.05,
fill="red")
}
dat2 %>% ggpairs(lower=list(continuous=my_scatter),
diag=list(continuous=my_density))
library(GGally)
my_scatter<-function(data,mapping){
ggplot(data=data,mapping=mapping)+
geom_jitter(color="orange")
}
my_density<-function(data,mapping){
ggplot(data=data,mapping=mapping)+
geom_density(fill="blue")
}
dat2 %>% ggpairs(lower=list(continuous=my_scatter),
diag=list(continuous=my_density))
#####DO NOT MODIFY THIS CHUNK
set.seed(12)
var1<-runif(50,0,10)
set.seed(12)
var2<-var1+rnorm(50,5,2)
set.seed(12)
var3<- var1*(-rnorm(50,1,.2))
dat3<-tibble(var1,var2,var3)
ggcorr(dat3)
library(ggcorrplot)
ggcorrplot(cor(dat3))
library(ggcorrplot)
ggcorrplot(cor(dat3),type="lower")
library(ggcorrplot)
ggcorrplot(cor(dat3),
title="Correlations",
type="lower",
outline.color = "black")
#####DO NOT MODIFY THIS CHUNK
set.seed(5678)
var1<-rnorm(10,25,5)
names<-letters[1:10]
dat4<-tibble(names,var1)
dat4 %>% ggplot(aes(x=var1, y=names)) +
geom_point()
dat4 %>% ggplot(aes(x=var1, y=reorder(names,var1))) + geom_point()
dat4 %>% ggplot(aes(x=var1, y=reorder(names,var1))) + geom_point() +
theme(panel.grid.major.x=element_blank(),
panel.grid.minor.x=element_blank(),
panel.grid.major.y=element_line(linetype="dashed",color="red"))+
labs(x="Variable 1",y="")
#####DO NOT MODIFY THIS CHUNK
set.seed(13)
var1<-rnorm(10,25,5)
names<-letters[1:10]
dat5<-tibble(names,var1)
dat5 %>% ggplot(aes(x=reorder(names,var1),y=var1)) + geom_point() +
geom_segment(x=names,xend=names,y=0,yend=var1)
dat5 %>% ggplot(aes(x=reorder(names,var1),y=var1)) + geom_point(color="green") +
geom_segment(x=names,xend=names,y=0,yend=var1, color="green")
dat5 %>% ggplot(aes(x=reorder(names,var1),y=var1)) + geom_point(color="dark green") +
geom_segment(x=names,xend=names,y=0,yend=var1, color="dark green")
dat5 %>% ggplot(aes(x=reorder(names,var1),y=var1)) + geom_point(color="dark green") +
geom_segment(x=names,xend=names,y=0,yend=var1, color="dark green") + labs(x="", y="Variable 1")
dat5 %>% ggplot(aes(x=reorder(names,var1),y=var1)) + geom_point(color="dark green") +
geom_segment(x=names,xend=names,y=0,yend=var1, color="dark green") + labs(x="", y="Variable 1") +
theme(axis.text.x=element_text(angle=90))
#####DO NOT MODIFY THIS CHUNK
set.seed(8)
fiction<-tibble(Genre=rep("Fiction",5),Time=seq(1:5),Total=sample(1:10,5))
set.seed(7)
biography<-tibble(Genre=rep("Biography",5),Time=seq(1:5),Total=sample(1:10,5))
set.seed(9)
mystery<-tibble(Genre=rep("Mystery",5),Time=seq(1:5),Total=sample(1:10,5))
books_checked_out<-bind_rows(fiction,biography,mystery)
books_checked_out
books_checked_out %>% ggplot(aes(x=Time, y=Total, fill=Genre)) + geom_are()
books_checked_out %>% ggplot(aes(x=Time, y=Total, fill=Genre)) + geom_area()
books_checked_out %>% ggplot(aes(x=Time, y=Total, fill=Genre)) + geom_area() + labs(title="Books Checked Out")
#####DO NOT MODIFY THIS CHUNK
books_checked_out2 <- books_checked_out %>%
filter(Time==1 | Time==5) %>%
pivot_wider(names_from = Time,values_from=Total) %>%
rename(Time1=`1`,Time5=`5`)
books_checked_out2
library(ggalt)
books_checked_out2 %>% ggplot(aes(x=Time1, xend=Time5, y=Genre)) + geom_dumbbell()
books_checked_out2
library(ggalt)
books_checked_out2 %>% ggplot(aes(x=Time1, xend=Time5, y=reorder(Genre,Time1))) + geom_dumbbell()
library(ggalt)
books_checked_out2 %>% ggplot(aes(x=Time1, xend=Time5, y=reorder(Genre,Time1))) + geom_dumbbell(colour_x="purple",
colour_xend="red",
size_x=3,
size_xend=3)
library(ggalt)
books_checked_out2 %>% ggplot(aes(x=Time1, xend=Time5, y=reorder(Genre,Time1))) + geom_dumbbell(colour_x="purple",
colour_xend="red",
size_x=3,
size_xend=3) +
labs(x="", y="Genre")
library(ggalt)
books_checked_out2 %>% ggplot(aes(x=Time1, xend=Time5, y=reorder(Genre,Time1))) + geom_dumbbell(colour_x="red",
colour_xend="purple",
size_x=3,
size_xend=3) +
labs(x="", y="Genre")
#####DO NOT MODIFY THIS CHUNK
pie_dat<-c(1,2,3,4,5)
###HINT: check the Help file for pie to see how to specify the color to the my_color palette
library(RColorBrewer)
my_color<-brewer.pal(5,"Spectral")
pie(pie_dat)
###HINT: check the Help file for pie to see how to specify the color to the my_color palette
library(RColorBrewer)
my_color<-brewer.pal(5,"Spectral")
pie(pie_dat,color=my_color)
###HINT: check the Help file for pie to see how to specify the color to the my_color palette
library(RColorBrewer)
my_color<-brewer.pal(5,"Spectral")
pie(pie_dat,colour=my_color)
?pie
###HINT: check the Help file for pie to see how to specify the color to the my_color palette
library(RColorBrewer)
my_color<-brewer.pal(5,"Spectral")
pie(pie_dat, col=my_color)
library(tidyverse)
library(maps)
####tell us what data is in this package
help(package="maps")
?map_data
my_world_map <- map_data("world")
####here the group is specified correctly
ggplot(data = my_world_map, mapping = aes(x= long, y= lat,group=group))+
geom_polygon(fill="white",color="black")
head(my_world_map)
germany <- filter(my_world_map,region=="Germany")
ggplot(data=germany,mapping=aes(x=long,y=lat,group=group))+geom_polygon(fill="white",color="black")
france_germany <- filter(my_world_map,region=="France" | region=="Germany")
ggplot(data = france_germany, mapping = aes(x= long, y= lat,group=group))+geom_polygon(fill="white",color="black")
a_region<- filter(my_world_map,long>-10 & long<15.1 & lat>32 & lat<55)
ggplot(data = a_region, mapping = aes(x= long, y= lat,group=group))+geom_polygon(fill="white",color="black")
my_state_map <- map_data("state")
ggplot(data = my_state_map, mapping = aes(x= long, y= lat, group = group))+geom_polygon(fill="white",color="black")
#####this provides a list of continental states plus Washington, DC
states<- unique(my_state_map$region)
some_data_values <- data.frame(
####the region column is here so you can join this fake data with the my_state_map data by the region column
"region"=states,
"qual_value"=c(rep(LETTERS[1:10],4),
LETTERS[1:9]),
"quant_value"=runif(49,0,5))
map_data_combined <- left_join(my_state_map,some_data_values,by="region")
######make a choropleth with default colors
ggplot(data = map_data_combined, mapping = aes(x= long, y= lat, group = group,fill=qual_value))+geom_polygon(color="black")
######make a choropleth with some fancy fixes
ggplot(data = map_data_combined, mapping = aes(x= long, y= lat, group = group,fill=qual_value))+
geom_polygon(color="black")+
theme_classic()+
labs(x="",y="",title="A Test Choropleth")+
theme(axis.text.x = element_blank(),axis.text.y=element_blank(),axis.line = element_blank(),axis.ticks = element_blank())+
scale_fill_brewer(palette="Spectral")
#####switch out for a quantitative value
ggplot(data = map_data_combined, mapping = aes(x= long, y= lat, group = group,fill=quant_value))+
geom_polygon(color="black")
world <- map_data("world")
japan <- filter(world,region=="Japan")
ggplot(data = japan, mapping = aes(x= long, y= lat, group = group))+geom_polygon(color="black",fill="white")
head(maps::world.cities)
my_cities <-maps::world.cities
japan_cities <- filter(my_cities,country.etc=="Japan")
head(japan_cities)
####make a point for every city
ggplot(data = japan, mapping = aes(x= long, y= lat, group = group))+
geom_polygon(color="black",fill="white")+
geom_point(data = japan_cities,aes(x=long,y=lat,group=NULL),color="red")
japan_big_cities <- filter(my_cities,country.etc=="Japan" & pop>500000)
ggplot(data = japan, mapping = aes(x= long, y= lat, group = group))+
geom_polygon(color="black",fill="white")+
geom_point(data = japan_big_cities,aes(x=long,y=lat,group=NULL),color="red")
####vary size of point by city size
ggplot(data = japan, mapping = aes(x= long, y= lat, group = group))+
geom_polygon(color="black",fill="white")+
geom_point(data = japan_big_cities,aes(x=long,y=lat,group=NULL,size=pop),color="red")
japan_big_cities$qual <- sample(LETTERS[1:5],nrow(japan_big_cities),replace=TRUE)
ggplot(data = japan, mapping = aes(x= long, y= lat, group = group))+
geom_polygon(color="black",fill="white")+
geom_point(data = japan_big_cities,aes(x=long,y=lat,group=NULL,color=qual,size=pop))
#####do some tweaking
####no scientific notation in legend r ggplot -- scales package adds the "scale_size_continuous" function to our arsenal, and we can set label=comma
library(scales)
###change the column name to make the legend nicer
japan_big_cities$Population <- japan_big_cities$pop
japan_big_cities$Qualitative <- japan_big_cities$qual
####do some additional refining
ggplot(data = japan, mapping = aes(x= long, y= lat, group = group))+geom_polygon(color="black",fill="white")+
geom_point(data = japan_big_cities,aes(x=long,y=lat,group=NULL,color=Qualitative,size=Population))+
scale_size_continuous(label=comma)
head(japan)
head(japan_big_cities)
####do some additional refining
ggplot(data = japan, mapping = aes(x= long, y= lat, group = group))+geom_polygon(color="black",fill="white")+
geom_point(data = japan_big_cities,aes(x=long,y=lat,group=NULL,color=Qualitative,size=Population,label=name))+
scale_size_continuous(label=comma) +
geom_text()
####do some additional refining
ggplot(data = japan, mapping = aes(x= long, y= lat, group = group))+geom_polygon(color="black",fill="white")+
geom_point(data = japan_big_cities,aes(x=long,y=lat,group=NULL,color=Qualitative,size=Population,labels=name))+
scale_size_continuous(label=comma) +
geom_text()
####do some additional refining
ggplot(data = japan, mapping = aes(x= long, y= lat, group = group))+geom_polygon(color="black",fill="white")+
geom_point(data = japan_big_cities,aes(x=long,y=lat,group=NULL,color=Qualitative,size=Population))+
scale_size_continuous(label=comma) +
geom_text(data=japan_big_cities,aes(labels=name))
####do some additional refining
ggplot(data = japan, mapping = aes(x= long, y= lat, group = group))+geom_polygon(color="black",fill="white")+
geom_point(data = japan_big_cities,aes(x=long,y=lat,group=NULL,color=Qualitative,size=Population))+
scale_size_continuous(label=comma) +
geom_text(data=japan_big_cities,aes(label=name))
####do some additional refining
ggplot(data = japan, mapping = aes(x= long, y= lat, group = NULL))+geom_polygon(color="black",fill="white")+
geom_point(data = japan_big_cities,aes(x=long,y=lat,group=NULL,color=Qualitative,size=Population))+
scale_size_continuous(label=comma) +
geom_text(data=japan_big_cities,aes(label=name))
head(japan)
####do some additional refining
ggplot(data = japan, mapping = aes(x= long, y= lat, group = group))+geom_polygon(color="black",fill="white")+
geom_point(data = japan_big_cities,aes(x=long,y=lat,group=NULL,color=Qualitative,size=Population))+
scale_size_continuous(label=comma) +
geom_text(data=japan_big_cities,aes(label=name))
####do some additional refining
ggplot(data = japan, mapping = aes(x= long, y= lat, group = group))+geom_polygon(color="black",fill="white")+
geom_point(data = japan_big_cities,aes(x=long,y=lat,group=NULL,color=Qualitative,size=Population))+
scale_size_continuous(label=comma) +
geom_text(data=japan_big_cities,aes(label=name, group=NULL))
?geom_text
####do some additional refining
ggplot(data = japan, mapping = aes(x= long, y= lat, group = group))+geom_polygon(color="black",fill="white")+
geom_point(data = japan_big_cities,aes(x=long,y=lat,group=NULL,color=Qualitative,size=Population))+
scale_size_continuous(label=comma) +
geom_text(data=japan_big_cities,aes(label=name, group=NULL), position = "dodge")
####do some additional refining
ggplot(data = japan, mapping = aes(x= long, y= lat, group = group))+geom_polygon(color="black",fill="white")+
geom_point(data = japan_big_cities,aes(x=long,y=lat,group=NULL,color=Qualitative,size=Population))+
scale_size_continuous(label=comma) +
geom_text(data=japan_big_cities,aes(label=name, group=NULL), position = position_dodge())
####do some additional refining
ggplot(data = japan, mapping = aes(x= long, y= lat, group = group))+geom_polygon(color="black",fill="white")+
geom_point(data = japan_big_cities,aes(x=long,y=lat,group=NULL,color=Qualitative,size=Population))+
scale_size_continuous(label=comma) +
geom_text(data=japan_big_cities,aes(label=name, group=NULL), position = position_dodge(width=1))
####do some additional refining
ggplot(data = japan, mapping = aes(x= long, y= lat, group = group))+geom_polygon(color="black",fill="white")+
geom_point(data = japan_big_cities,aes(x=long,y=lat,group=NULL,color=Qualitative,size=Population))+
scale_size_continuous(label=comma) +
geom_text(data=japan_big_cities,aes(label=name, group=NULL), position = position_dodge2(width=1))
####do some additional refining
ggplot(data = japan, mapping = aes(x= long, y= lat, group = group))+geom_polygon(color="black",fill="white")+
geom_point(data = japan_big_cities,aes(x=long,y=lat,group=NULL,color=Qualitative,size=Population))+
scale_size_continuous(label=comma) +
geom_text(data=japan_big_cities,aes(label=name, group=NULL), position = position_jitter(width=1, height=1))
####do some additional refining
ggplot(data = japan, mapping = aes(x= long, y= lat, group = group))+geom_polygon(color="black",fill="white")+
geom_point(data = japan_big_cities,aes(x=long,y=lat,group=NULL,color=Qualitative,size=Population))+
scale_size_continuous(label=comma) +
geom_text(data=japan_big_cities,aes(label=name, group=NULL), position = position_jitter())
####do some additional refining
ggplot(data = japan, mapping = aes(x= long, y= lat, group = group))+geom_polygon(color="black",fill="white")+
geom_point(data = japan_big_cities,aes(x=long,y=lat,group=NULL,color=Qualitative,size=Population))+
scale_size_continuous(label=comma) +
geom_text(data=subset(japan_big_cities, Population>6000000),aes(label=name, group=NULL), position = position_jitter())
####do some additional refining
ggplot(data = japan, mapping = aes(x= long, y= lat, group = group))+geom_polygon(color="black",fill="white")+
geom_point(data = japan_big_cities,aes(x=long,y=lat,group=NULL,color=Qualitative,size=Population))+
scale_size_continuous(label=comma) +
geom_text(data=subset(japan_big_cities, Population>4000000),aes(label=name, group=NULL), position = position_jitter())
####do some additional refining
ggplot(data = japan, mapping = aes(x= long, y= lat, group = group))+geom_polygon(color="black",fill="white")+
geom_point(data = japan_big_cities,aes(x=long,y=lat,group=NULL,color=Qualitative,size=Population))+
scale_size_continuous(label=comma) +
geom_text(data=subset(japan_big_cities, Population>3000000),aes(label=name, group=NULL), position = position_jitter())
####do some additional refining
ggplot(data = japan, mapping = aes(x= long, y= lat, group = group))+geom_polygon(color="black",fill="white")+
geom_point(data = japan_big_cities,aes(x=long,y=lat,group=NULL,color=Qualitative,size=Population))+
scale_size_continuous(label=comma) +
geom_text(data=subset(japan_big_cities, Population>3000000),aes(label=name, group=NULL), position = position_jitter()) +
guides(fill=FALSE)
####do some additional refining
ggplot(data = japan, mapping = aes(x= long, y= lat, group = group))+geom_polygon(color="black",fill="white")+
geom_point(data = japan_big_cities,aes(x=long,y=lat,group=NULL,color=Qualitative,size=Population))+
scale_size_continuous(label=comma) +
geom_text(data=subset(japan_big_cities, Population>3000000),aes(label=name, group=NULL), position = position_jitter()) +
guides(fill="none")
####do some additional refining
ggplot(data = japan, mapping = aes(x= long, y= lat, group = group))+geom_polygon(color="black",fill="white")+
geom_point(data = japan_big_cities,aes(x=long,y=lat,group=NULL,color=Qualitative,size=Population))+
scale_size_continuous(label=comma) +
geom_text(data=subset(japan_big_cities, Population>3000000),aes(label=name, group=NULL), position = position_jitter())
install.packages(c("ggrepel", "sf"))
install.packages(c("rgeos", "rnaturalearth", "rnaturalearthdata"))
library(tidyverse)
library(maps)
####make some data for painting the map
my_world_map <- map_data("world")
countries <- unique(my_world_map$region)
set.seed(987)
some_data_values <- data.frame(
"region"=countries,
"Score"=runif(252,0,100))
head(my_world_map)
?left_join
left_join(my_world_map, some_data_values,by=region) %>% ggplot(aes(x=long,y=lat)) +
geom_polygon(col="black",fill=score)
left_join(my_world_map, some_data_values,by="region") %>% ggplot(aes(x=long,y=lat)) +
geom_polygon(col="black",fill=score)
left_join(my_world_map, some_data_values,by="region") %>% ggplot(aes(x=long,y=lat)) +
geom_polygon(col="black",fill=Score)
library(tidyverse)
library(maps)
####make some data for painting the map
my_world_map <- map_data("world")
countries <- unique(my_world_map$region)
set.seed(987)
some_data_values <- data.frame(
"region"=countries,
"Score"=runif(252,0,100))
####Make sure you install any necessary libraries
####HINT: Use the following code to get the colors right
#scale_fill_distiller(palette=5)
####HINT: make sure you use left_join to combine the data_values above to the world map data in my_world_map
my_world_map %>% left_join(some_data_values,by="region") %>% ggplot(aes(x=long,y=lat)) +
geom_polygon(col="black",fill=Score)
####Make sure you install any necessary libraries
####HINT: Use the following code to get the colors right
#scale_fill_distiller(palette=5)
####HINT: make sure you use left_join to combine the data_values above to the world map data in my_world_map
my_world_map %>% left_join(some_data_values,by="region") %>% ggplot(aes(x=long,y=lat,col="black",fill=Score)) +
geom_polygon()
head(my_world_map)
####Make sure you install any necessary libraries
####HINT: Use the following code to get the colors right
#scale_fill_distiller(palette=5)
####HINT: make sure you use left_join to combine the data_values above to the world map data in my_world_map
my_world_map %>% left_join(some_data_values,by="region") %>% ggplot(aes(x=long,y=lat,group=group, col="black",fill=Score)) +
geom_polygon()
####Make sure you install any necessary libraries
####HINT: Use the following code to get the colors right
#scale_fill_distiller(palette=5)
####HINT: make sure you use left_join to combine the data_values above to the world map data in my_world_map
my_world_map %>% left_join(some_data_values,by="region") %>% ggplot(aes(x=long,y=lat,group=group, col="black",fill=Score)) +
geom_polygon() +
scale_fill_distiller(palette = 5)
####Make sure you install any necessary libraries
####HINT: Use the following code to get the colors right
#scale_fill_distiller(palette=5)
####HINT: make sure you use left_join to combine the data_values above to the world map data in my_world_map
my_world_map %>% left_join(some_data_values,by="region") %>% ggplot(aes(x=long,y=lat,group=group, fill=Score)) +
geom_polygon() +
scale_fill_distiller(palette = 5)
#####DO NOT MODIFY THIS CHUNK
set.seed(15)
Measurement<-rnorm(32,50,1)
head(my_world_map)
####Make sure you load any necessary libraries
####HINT: Use a filter command to get just maps of Costa Rica, Panama, and Nicaragua
####Hint: Use a filter command to put in points only for cities with a population of greater than 40,000. This should leave you with 32 cities.
####Hint: Use add_column to attach the "Measurement" variable to your data, and set that to the color aesthetic when you draw the points.
####Hint: set the colors for the city points with scale_color_distiller(palette=7)
####Hint: set the size of all points to the value 5
my_world_map %>% filter(region %in% c("Costa Rica","Panama","Nicaragua")) %>% head()
my_world_map %>% filter(region %in% c("Costa Rica","Panama","Nicaragua")) %>% ggplot(aes(x=long,y=lat,group=grou)) +
geom_polygon()
my_world_map %>% filter(region %in% c("Costa Rica","Panama","Nicaragua")) %>% ggplot(aes(x=long,y=lat,group=group)) +
geom_polygon()
my_world_map %>% filter(region %in% c("Costa Rica","Panama","Nicaragua")) %>% ggplot(aes(x=long,y=lat,group=group, fill="white")) +
geom_polygon()
my_world_map %>% filter(region %in% c("Costa Rica","Panama","Nicaragua")) %>% ggplot(aes(x=long,y=lat,group=group)) +
geom_polygon(fill="white")
my_world_map %>% filter(region %in% c("Costa Rica","Panama","Nicaragua")) %>% ggplot(aes(x=long,y=lat,group=group)) +
geom_polygon(fill="white",color="black")
head(my_cities)
####Make sure you load any necessary libraries
####HINT: Use a filter command to get just maps of Costa Rica, Panama, and Nicaragua
####Hint: Use a filter command to put in points only for cities with a population of greater than 40,000. This should leave you with 32 cities.
####Hint: Use add_column to attach the "Measurement" variable to your data, and set that to the color aesthetic when you draw the points.
####Hint: set the colors for the city points with scale_color_distiller(palette=7)
####Hint: set the size of all points to the value 5
library(maps)
my_cities <-maps::world.cities
selected_cities <- filter(my_cities, country.etc %in% c("Costa Rica","Panama","Nicaragua") & pop>40,000)
selected_cities %>% add_column(Measurement)
my_world_map %>% filter(region %in% c("Costa Rica","Panama","Nicaragua")) %>% ggplot(aes(x=long,y=lat,group=group)) +
geom_polygon(fill="white",color="black") +
geom_point(data=selected_cities, aes(x=long, y=lat, col=Measurement))
selected_cities
selected_cities <- filter(my_cities, country.etc %in% c("Costa Rica","Panama","Nicaragua") & pop>40,000)
head(my_cities)
filter(my_cities, country.etc %in% c("Costa Rica","Panama","Nicaragua"))
filter(my_cities, country.etc %in% c("Costa Rica","Panama","Nicaragua") & pop>40000)
####Make sure you load any necessary libraries
####HINT: Use a filter command to get just maps of Costa Rica, Panama, and Nicaragua
####Hint: Use a filter command to put in points only for cities with a population of greater than 40,000. This should leave you with 32 cities.
####Hint: Use add_column to attach the "Measurement" variable to your data, and set that to the color aesthetic when you draw the points.
####Hint: set the colors for the city points with scale_color_distiller(palette=7)
####Hint: set the size of all points to the value 5
library(maps)
my_cities <-maps::world.cities
selected_cities <- filter(my_cities, country.etc %in% c("Costa Rica","Panama","Nicaragua") & pop>40000)
selected_cities %>% add_column(Measurement)
my_world_map %>% filter(region %in% c("Costa Rica","Panama","Nicaragua")) %>% ggplot(aes(x=long,y=lat,group=group)) +
geom_polygon(fill="white",color="black") +
geom_point(data=selected_cities, aes(x=long, y=lat, col=Measurement))
####Make sure you load any necessary libraries
####HINT: Use a filter command to get just maps of Costa Rica, Panama, and Nicaragua
####Hint: Use a filter command to put in points only for cities with a population of greater than 40,000. This should leave you with 32 cities.
####Hint: Use add_column to attach the "Measurement" variable to your data, and set that to the color aesthetic when you draw the points.
####Hint: set the colors for the city points with scale_color_distiller(palette=7)
####Hint: set the size of all points to the value 5
library(maps)
my_cities <-maps::world.cities
selected_cities <- filter(my_cities, country.etc %in% c("Costa Rica","Panama","Nicaragua") & pop>40000)
selected_cities %>% add_column(Measurement)
my_world_map %>% filter(region %in% c("Costa Rica","Panama","Nicaragua")) %>% ggplot(aes(x=long,y=lat,group=group)) +
geom_polygon(fill="white",color="black") +
geom_point(data=selected_cities, aes(x=long, y=lat, col=Measurement, group=NULL))
####Make sure you load any necessary libraries
####HINT: Use a filter command to get just maps of Costa Rica, Panama, and Nicaragua
####Hint: Use a filter command to put in points only for cities with a population of greater than 40,000. This should leave you with 32 cities.
####Hint: Use add_column to attach the "Measurement" variable to your data, and set that to the color aesthetic when you draw the points.
####Hint: set the colors for the city points with scale_color_distiller(palette=7)
####Hint: set the size of all points to the value 5
library(maps)
my_cities <-maps::world.cities
selected_cities <- filter(my_cities, country.etc %in% c("Costa Rica","Panama","Nicaragua") & pop>40000)
selected_cities %>% add_column(Measurement)
my_world_map %>% filter(region %in% c("Costa Rica","Panama","Nicaragua")) %>% ggplot(aes(x=long,y=lat,group=group)) +
geom_polygon(fill="white",color="black") +
geom_point(data=selected_cities, aes(x=long, y=lat, col=Measurement, group=NULL, size=5)) +
scale_color_distiller(palette=7)
####Make sure you load any necessary libraries
####HINT: Use a filter command to get just maps of Costa Rica, Panama, and Nicaragua
####Hint: Use a filter command to put in points only for cities with a population of greater than 40,000. This should leave you with 32 cities.
####Hint: Use add_column to attach the "Measurement" variable to your data, and set that to the color aesthetic when you draw the points.
####Hint: set the colors for the city points with scale_color_distiller(palette=7)
####Hint: set the size of all points to the value 5
library(maps)
my_cities <-maps::world.cities
selected_cities <- filter(my_cities, country.etc %in% c("Costa Rica","Panama","Nicaragua") & pop>40000)
selected_cities %>% add_column(Measurement)
my_world_map %>% filter(region %in% c("Costa Rica","Panama","Nicaragua")) %>% ggplot(aes(x=long,y=lat,group=group)) +
geom_polygon(fill="white",color="black") +
geom_point(data=selected_cities, aes(x=long, y=lat, col=Measurement, group=NULL, size=5)) +
scale_color_distiller(palette=7) +
guides(size="None")
####Make sure you load any necessary libraries
####HINT: Use a filter command to get just maps of Costa Rica, Panama, and Nicaragua
####Hint: Use a filter command to put in points only for cities with a population of greater than 40,000. This should leave you with 32 cities.
####Hint: Use add_column to attach the "Measurement" variable to your data, and set that to the color aesthetic when you draw the points.
####Hint: set the colors for the city points with scale_color_distiller(palette=7)
####Hint: set the size of all points to the value 5
library(maps)
my_cities <-maps::world.cities
selected_cities <- filter(my_cities, country.etc %in% c("Costa Rica","Panama","Nicaragua") & pop>40000)
selected_cities %>% add_column(Measurement)
my_world_map %>% filter(region %in% c("Costa Rica","Panama","Nicaragua")) %>% ggplot(aes(x=long,y=lat,group=group)) +
geom_polygon(fill="white",color="black") +
geom_point(data=selected_cities, aes(x=long, y=lat, col=Measurement, group=NULL, size=5)) +
scale_color_distiller(palette=7) +
guides(size=FALSE)
####Make sure you load any necessary libraries
####HINT: Use a filter command to get just maps of Costa Rica, Panama, and Nicaragua
####Hint: Use a filter command to put in points only for cities with a population of greater than 40,000. This should leave you with 32 cities.
####Hint: Use add_column to attach the "Measurement" variable to your data, and set that to the color aesthetic when you draw the points.
####Hint: set the colors for the city points with scale_color_distiller(palette=7)
####Hint: set the size of all points to the value 5
library(maps)
my_cities <-maps::world.cities
selected_cities <- filter(my_cities, country.etc %in% c("Costa Rica","Panama","Nicaragua") & pop>40000)
selected_cities %>% add_column(Measurement)
my_world_map %>% filter(region %in% c("Costa Rica","Panama","Nicaragua")) %>% ggplot(aes(x=long,y=lat,group=group)) +
geom_polygon(fill="white",color="black") +
geom_point(data=selected_cities, aes(x=long, y=lat, col=Measurement, group=NULL, size=5)) +
scale_color_distiller(palette=7) +
guides(size="none")
#####INSTALL THESE PACKAGES IF NECESSARY
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)
library(rgeos)
####DO NOT MODIFY
s_america<-ne_countries(scale="medium",continent='south america',returnclass="sf")
head(s_america)
####Make sure you load any necessary libraries
####HINT: the s_america object created in the chunk above is a simple features object with many columns. Identify the correct column based on the solution figure and use it to color in the choropleth.
####HINT: Use scale_fill_distiller and palette 10 to the match the colors.
ggplot() + geom_sf(data =s_america)
names(s_america)
####Make sure you load any necessary libraries
####HINT: the s_america object created in the chunk above is a simple features object with many columns. Identify the correct column based on the solution figure and use it to color in the choropleth.
####HINT: Use scale_fill_distiller and palette 10 to the match the colors.
ggplot(data =s_america, aes(fill=pop_est)) +
geom_sf() +
scale_fill_distiller(palette = 10)
